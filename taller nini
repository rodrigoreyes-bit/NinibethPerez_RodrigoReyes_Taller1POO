/* Nombre: Ninibeth Pérez, RUT: 21.787.686-9, Carrera: ICCI | Nombre: Rodrigo Reyes, RUT: rut ro, Carrera: ICCI
 * 
 * 
 * 
 * 
 */ 

import java.io.File;
import java.io.IOException;
import java.util.Scanner;

public class Control {
	
	public static void menuAdmin() {
		//Imprime el menu del administrador
		System.out.println("1) Ver matriz completa de métricas");
		System.out.println("2) Identificar experimento con mejor F1-Score");
		System.out.println("3) Calcular promedio global de cada métrica");
		System.out.println("4) Comparar dos experimentos lado a lado");
		System.out.println("5) Comparar CSV con matriz de confusión generada");
		System.out.println("6) Volver");
	}
	
	public static void menuUsuario() {
		//Imprime el menu del usuario
		System.out.println("1) Ver lista de experimentos");
		System.out.println("2) Mostrar matriz de confusión de un experimento (TP,FP,TN,FN)");
		System.out.println("3) Ver métricas de un experimento (Accuracy, Precision, Recall, F1)");
		System.out.println("4) Ver promedio de Accuracy de todos los modelos");
		System.out.println("5) Volver");
	}
	
	public static void rellenarMatriz(int [][] matriz, int valorReal, int valorPredicho) {
		//Esta función rellena la matriz de  cada experimento con los valores TP,FN,TN y FN :3
		if (valorReal == 1 && valorPredicho == 1) { 
			//TP
			matriz[0][0] += 1;
		} else if (valorReal == 0 && valorPredicho == 1) {
			//FP
			matriz[0][1] += 1;
		} else if (valorReal == 0 && valorPredicho == 0) {
			//TN
			matriz[1][1] += 1;
		} else if (valorReal == 1 && valorPredicho == 0) {
			//FN
			matriz[1][0] += 1;
		}
	}
	
	public static double accuracy(int [][] matriz) {
		//Esta función calcula el accuracy
		double tp = matriz[0][0];
		double fp = matriz[0][1];
		double tn = matriz[1][1];
		double fn = matriz[1][0];
		
		double accuracy = (tp + tn) / (tp + fp + tn + fn);
		return accuracy;
	}
	
	public static double precision(int [][] matriz) {
		//Esta función calcula la precision
		double tp = matriz[0][0];
		double fp = matriz[0][1];
		
		double precision = tp / (tp + fp);
		return precision;
	}
	
	public static double recall(int [][] matriz) {
		//Esta función calcula el recall
		double tp = matriz[0][0];
		double fn = matriz[1][0];
		
		double recall = tp / (tp + fn) ;
		return recall;
	}
	
	public static double f1Score(double precision, double recall) {
		//Esta función calcula el f1 score
		double f1Score = 2 * (precision * recall) / (precision + recall);
		return f1Score;
	}
	
	public static double [] metricas(int [][]experimento) {
		//Esta función hace una lista con todas las métricas calculadas anteriormente (accuracy, precision, recall, f1Score)
		double accuracy = accuracy(experimento);
		double precision = precision(experimento);
		double recall = recall(experimento);
		double f1Score = f1Score(precision, recall);
		
		double [] listaMetricas = {accuracy, precision, recall, f1Score};
		return listaMetricas;
	}
	
	public static void verMatrizCompleta (int [][] experimento1, double [] listaExp1, int [][] experimento2, double [] listaExp2, int [][] experimento3, double [] listaExp3, int [][] experimento4, double [] listaExp4) throws IOException {
		//Imprime la matriz completa de todas las metricas de los experimentos
		File experimentos = new File("experimentos.txt");
		Scanner lector = new Scanner(experimentos);
		System.out.println("ID | Descripción | TP FP TN FN | Accuracy | Precision | Recall | F1");
		System.out.println("--------------------------------------------------------------------");
		
		while (lector.hasNextLine()) {
			String linea = lector.nextLine();
			String [] partes = linea.split(";");
			String id = partes[0];
			String descripcion = partes[1];
			
			if (id.equals("Exp1")) {
				System.out.println(id +" | "+ descripcion +" | "+ experimento1[0][0] + " " + experimento1[0][1] + " " + experimento1[1][1] + " " + experimento1[1][0] +" | "+ listaExp1[0] +" | "+ listaExp1[1] +" | "+ listaExp1[2] +" | "+ listaExp1[3]);
			} else if (id.equals("Exp2")) {
				System.out.println(id +" | "+ descripcion +" | "+ experimento2[0][0] + " " + experimento2[0][1] + " " + experimento2[1][1] + " " + experimento2[1][0] +" | "+ listaExp2[0] +" | "+ listaExp2[1] +" | "+ listaExp2[2] +" | "+ listaExp2[3]);
			} else if (id.equals("Exp3")) {
				System.out.println(id +" | "+ descripcion +" | "+ experimento3[0][0] + " " + experimento3[0][1] + " " + experimento3[1][1] + " " + experimento3[1][0] +" | "+ listaExp3[0] +" | "+ listaExp3[1] +" | "+ listaExp3[2] +" | "+ listaExp3[3]);
			} else {
				System.out.println(id +" | "+ descripcion +" | "+ experimento4[0][0] + " " + experimento4[0][1] + " " + experimento4[1][1] + " " + experimento4[1][0] +" | "+ listaExp4[0] +" | "+ listaExp4[1] +" | "+ listaExp4[2] +" | "+ listaExp4[3] + "\n");
			}
		}
		lector.close();
	}
	
	public static void hacerMatriz(double [][] matriz, int fila, double [] listaExp) {
		//Este procedimiento agrega las metricas de un experimento a una matriz (que eventualmente va a tener todas las metricas de todos los exp)
		for (int j = 0; j < listaExp.length; j++) {
			matriz[fila][j] = listaExp[j];
		}
	}
	
	public static void mejorF1Score(double [][]matriz, String [] nombreExp) {
		//Imprime cual es el mejor f1-score
		double mejor = 0.0;
		String exp = "";
		
		//f1 score -> matriz[i][3]
		for (int i = 0; i < matriz.length; i++) {
			if (matriz[i][3] > mejor) {
				mejor = matriz[i][3];
				exp = nombreExp[i];
			}
		} System.out.println("Mejor F1-Score: " + exp + "= " + mejor + "\n");
	}
	
	public static void promedioGlobalMetricas(double [][] matriz) {
		String [] metricas = {"Accuracy", "Precision", "Recall", "F1-Score"};
		double [] listaSumas = {0,0,0,0};
		for (int c = 0; c < 4; c++) {
			double suma = 0;
			for (int f = 0; f < 4 ; f++) {
				suma += matriz[f][c];
			} listaSumas[c] = suma;
		}
		
		for (int i = 0; i < 4; i++) {
			System.out.println("Promedio " + metricas[i] + " = " + (listaSumas[i]/4));
		} System.out.println("");
	}
	
	public static int indice(String [] nombreExp, String elemento) {
		int indice = -1;
		
		for (int i = 0; i < nombreExp.length; i++) {
			if (nombreExp[i].equals(elemento)) {
				indice = i;
				break;
			}
		} return indice;
	}
	
	public static int [][] saberMatriz(String exp, int [][] experimento1, int [][] experimento2, int [][] experimento3, int [][] experimento4) {
		int [][]matriz = new int[1][1];
		if (exp.equals("Exp1")) {
			matriz = experimento1;
		} else if (exp.equals("Exp2")) {
			matriz = experimento2;
		} else if (exp.equals("Exp3")) {
			matriz = experimento3;
		} else {
			matriz = experimento4;
		} return matriz;
	}
	
	public static void compararExperimentos(String primerExp, String segundoExp, String [] nombreExp, double [][] matriz, int [][] experimento1, int [][] experimento2, int [][] experimento3, int [][] experimento4) {
		System.out.println("Comparación " + primerExp + " vs " + segundoExp);
		int x = indice(nombreExp, primerExp); //indice primer experimento
		int y = indice(nombreExp, segundoExp); //indice segundo experimento
		
		int [][]matrizPrimerExp = saberMatriz(primerExp, experimento1, experimento2, experimento3, experimento4);
		int [][]matrizSegundoExp = saberMatriz(segundoExp, experimento1, experimento2, experimento3, experimento4);
		
		System.out.println(primerExp + " TP= " + matrizPrimerExp[0][0] + " FP= " + matrizPrimerExp[0][1] + " TN= " + matrizPrimerExp[1][1] + " FN= " + matrizPrimerExp[1][0]);
		System.out.println(segundoExp + " TP= " + matrizSegundoExp[0][0] + " FP= " + matrizSegundoExp[0][1] + " TN= " + matrizSegundoExp[1][1] + " FN= " + matrizSegundoExp[1][0] + "\n");
		
		System.out.println("Metricas " + primerExp + ": Accuracy = " + matriz[x][0] + " Precision = " + matriz[x][1] + " Recall = " + matriz[x][2] + " F1-Score = " + matriz[x][3]);
		System.out.println("Metricas " + segundoExp + ": Accuracy = " + matriz[y][0] + " Precision = " + matriz[y][1] + " Recall = " + matriz[y][2] + " F1-Score = " + matriz[y][3] + "\n");
		
		//TERMINAR :,VVVVVVVVVVVVVV
	}
	
	public static void main(String[] args) throws IOException {
		File predicciones = new File("predicciones.txt");
		Scanner lector = new Scanner(predicciones);
		int [][] experimento1 = new int[2][2];
		int [][] experimento2 = new int[2][2];
		int [][] experimento3 = new int[2][2];
		int [][] experimento4 = new int[2][2];
		
		while (lector.hasNextLine()) {
			String linea = lector.nextLine();
			
			String [] partes = linea.split(";");
			
			String id = partes[0];
			
			int valorReal = Integer.valueOf(partes[1]);
			
			int valorPredicho = Integer.valueOf(partes[2]);
			
			if (id.equals("Exp1")) {
				rellenarMatriz(experimento1, valorReal, valorPredicho);
				
			} else if (id.equals("Exp2")) {
				rellenarMatriz(experimento2, valorReal, valorPredicho);
				
			} else if (id.equals("Exp3")) {
				rellenarMatriz(experimento3, valorReal, valorPredicho);
				
			} else {
				rellenarMatriz(experimento4, valorReal, valorPredicho);
			}
		}
		lector.close();
	
	//LISTAS EXPERIMENTOS
	double [] listaExp1 = metricas(experimento1);
	double [] listaExp2 = metricas(experimento2);
	double [] listaExp3 = metricas(experimento3);
	double [] listaExp4 = metricas(experimento4);
	
	//MATRIZ METRICAS
	String [] nombreExp = {"Exp1", "Exp2","Exp3","Exp4"};
	double [][] matriz = new double [4][4]; 
	hacerMatriz(matriz, 0, listaExp1);
	hacerMatriz(matriz, 1, listaExp2);
	hacerMatriz(matriz, 2, listaExp3);
	hacerMatriz(matriz, 3, listaExp4);
	
	//COSO PRINCIPAL -------------------------------------------------
	int opcion;
	Scanner scan = new Scanner(System.in);
	do {
		System.out.println("Bienvenido!!!");
		System.out.println("-----------MENU PRINCIPAL-----------");
		System.out.println("1) Admin");
		System.out.println("2) Usuario");
		System.out.println("3) Salir");
		System.out.println("Elija una opción: ");
		opcion = Integer.valueOf(scan.nextLine());
		
		if (opcion == 1) {
			menuAdmin();
			int opcionAdmin = Integer.valueOf(scan.nextLine());
			while (opcionAdmin != 6) {
				if (opcionAdmin == 1) {
					verMatrizCompleta(experimento1, listaExp1, experimento2, listaExp2, experimento3, listaExp3, experimento4, listaExp4);
					
				} else if (opcionAdmin == 2) {
					mejorF1Score(matriz, nombreExp);
					
				} else if (opcionAdmin == 3) {
					promedioGlobalMetricas(matriz);
					
				} else if (opcionAdmin == 4) {
					System.out.println("ID experimentos: Exp1 | Exp2 | Exp3 | Exp4");
					System.out.println("Ingrese ID del primer experimento a comparar: ");
					String primerExp = scan.nextLine();
					System.out.println("Ingrese ID del segundo experimento a comparar: ");
					String segundoExp = scan.nextLine();
					System.out.println(" ");
					compararExperimentos(primerExp, segundoExp, nombreExp, matriz, experimento1, experimento2, experimento3, experimento4);
					
				} else if (opcionAdmin == 5) {
					 /////////////// no se como hacer esta :,v
					 
				}
				menuAdmin();
				opcionAdmin = Integer.valueOf(scan.nextLine());
			}
		}
		
		if (opcion == 2) {
			menuUsuario();
			int opcionUsuario = Integer.valueOf(scan.nextLine());
			while (opcionUsuario != 5) {
				if (opcionUsuario == 1) {
					//
				} else if (opcionUsuario == 2) {
					//
				} else if (opcionUsuario == 3) {
					//
				} else if (opcionUsuario == 4) {
					//
				}
				menuUsuario();
				opcionUsuario = Integer.valueOf(scan.nextLine());
			}
		}
	} while (opcion != 3);	
	scan.close();
	}
}
}
