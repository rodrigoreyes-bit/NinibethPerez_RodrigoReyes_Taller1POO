/* Nombre: Ninibeth Pérez, RUT: 21.787.686-9, Carrera: ICCI | Nombre: Rodrigo Reyes, RUT: rut ro, Carrera: ICCI
 * 
 * 
 * 
 * 
 */ 

import java.io.File;
import java.io.IOException;
import java.util.Scanner;

public class Control {
	
	public static void menuAdmin() {
		System.out.println("1) Ver matriz completa de métricas");
		System.out.println("2) Identificar experimento con mejor F1-Score");
		System.out.println("3) Calcular promedio global de cada métrica");
		System.out.println("4) Comparar dos experimentos lado a lado");
		System.out.println("5) Comparar CSV con matriz de confusión generada");
		System.out.println("6) Volver");
	}
	
	public static void menuUsuario() {
		System.out.println("1) Ver lista de experimentos");
		System.out.println("2) Mostrar matriz de confusión de un experimento (TP,FP,TN,FN)");
		System.out.println("3) Ver métricas de un experimento (Accuracy, Precision, Recall, F1)");
		System.out.println("4) Ver promedio de Accuracy de todos los modelos");
		System.out.println("5) Volver");
	}
	
	public static void rellenarMatriz(int [][] matriz, int valorReal, int valorPredicho) {
		//esta funcion rellena la matriz de  cada experimento con los valores TP,FN,TN y FN :3
		if (valorReal == 1 && valorPredicho == 1) { 
			//TP
			matriz[0][0] += 1;
		} else if (valorReal == 0 && valorPredicho == 1) {
			//FP
			matriz[0][1] += 1;
		} else if (valorReal == 0 && valorPredicho == 0) {
			//TN
			matriz[1][1] += 1;
		} else if (valorReal == 1 && valorPredicho == 0) {
			//FN
			matriz[1][0] += 1;
		}
	}
	
	public static double accuracy(int [][] matriz) {
		double tp = matriz[0][0];
		double fp = matriz[0][1];
		double tn = matriz[1][1];
		double fn = matriz[1][0];
		
		double accuracy = (tp + tn) / (tp + fp + tn + fn);
		return accuracy;
	}
	
	public static double precision(int [][] matriz) {
		double tp = matriz[0][0];
		double fp = matriz[0][1];
		
		double precision = tp / (tp + fp);
		return precision;
	}
	
	public static double recall(int [][] matriz) {
		double tp = matriz[0][0];
		double fn = matriz[1][0];
		
		double recall = tp / (tp + fn) ;
		return recall;
	}
	
	public static double f1Score(double precision, double recall) {
		double f1Score = 2 * (precision * recall) / (precision + recall);
		return f1Score;
	}
	
	public static double [] metricas(int [][]experimento) {
		double accuracy = accuracy(experimento);
		double precision = precision(experimento);
		double recall = recall(experimento);
		double f1Score = f1Score(precision, recall);
		
		double [] listaMetricas = {accuracy, precision, recall, f1Score};
		return listaMetricas;
	}
	
	public static void verMatrizCompleta (int [][] experimento1, double [] listaExp1, int [][] experimento2, double [] listaExp2, int [][] experimento3, double [] listaExp3, int [][] experimento4, double [] listaExp4) throws IOException {
		File experimentos = new File("experimentos.txt");
		Scanner lector = new Scanner(experimentos);
		System.out.println("ID | Descripción | TP FP TN FN | Accuracy | Precision | Recall | F1");
		System.out.println("--------------------------------------------------------------------");
		
		while (lector.hasNextLine()) {
			String linea = lector.nextLine();
			String [] partes = linea.split(";");
			String id = partes[0];
			String descripcion = partes[1];
			
			if (id.equals("Exp1")) {
				System.out.println(id +" | "+ descripcion +" | "+ experimento1[0][0] + " " + experimento1[0][1] + " " + experimento1[1][1] + " " + experimento1[1][0] +" | "+ listaExp1[0] +" | "+ listaExp1[1] +" | "+ listaExp1[2] +" | "+ listaExp1[3]);
			} else if (id.equals("Exp2")) {
				System.out.println(id +" | "+ descripcion +" | "+ experimento2[0][0] + " " + experimento2[0][1] + " " + experimento2[1][1] + " " + experimento2[1][0] +" | "+ listaExp2[0] +" | "+ listaExp2[1] +" | "+ listaExp2[2] +" | "+ listaExp2[3]);
			} else if (id.equals("Exp3")) {
				System.out.println(id +" | "+ descripcion +" | "+ experimento3[0][0] + " " + experimento3[0][1] + " " + experimento3[1][1] + " " + experimento3[1][0] +" | "+ listaExp3[0] +" | "+ listaExp3[1] +" | "+ listaExp3[2] +" | "+ listaExp3[3]);
			} else {
				System.out.println(id +" | "+ descripcion +" | "+ experimento4[0][0] + " " + experimento4[0][1] + " " + experimento4[1][1] + " " + experimento4[1][0] +" | "+ listaExp4[0] +" | "+ listaExp4[1] +" | "+ listaExp4[2] +" | "+ listaExp4[3]);
			}
			
			
		}
		
		
		
		lector.close();
	}
	
	//COSO PRINCIPAL -------------------------------------------------
	public static void main(String[] args) throws IOException {
		File predicciones = new File("predicciones.txt");
		Scanner lector = new Scanner(predicciones);
		int [][] experimento1 = new int[2][2];
		int [][] experimento2 = new int[2][2];
		int [][] experimento3 = new int[2][2];
		int [][] experimento4 = new int[2][2];

		
		while (lector.hasNextLine()) {
			String linea = lector.nextLine();
			
			String [] partes = linea.split(";");
			
			String id = partes[0];
			
			int valorReal = Integer.valueOf(partes[1]);
			
			int valorPredicho = Integer.valueOf(partes[2]);
			
			if (id.equals("Exp1")) {
				rellenarMatriz(experimento1, valorReal, valorPredicho);
				
			} else if (id.equals("Exp2")) {
				rellenarMatriz(experimento2, valorReal, valorPredicho);
				
			} else if (id.equals("Exp3")) {
				rellenarMatriz(experimento3, valorReal, valorPredicho);
				
			} else {
				rellenarMatriz(experimento4, valorReal, valorPredicho);
			}
		}
		lector.close();
	
	//LISTAS EXPERIMENTOS
	double [] listaExp1 = metricas(experimento1);
	double [] listaExp2 = metricas(experimento2);
	double [] listaExp3 = metricas(experimento3);
	double [] listaExp4 = metricas(experimento4);

	
	int opcion;
	Scanner scan = new Scanner(System.in);
	do {
		System.out.println("Bienvenido!!!");
		System.out.println("MENU PRINCIPAL");
		System.out.println("1) Admin");
		System.out.println("2) Usuario");
		System.out.println("3) Salir");
		System.out.println("Elija una opción: ");
		opcion = Integer.valueOf(scan.nextLine());
		
		if (opcion == 1) {
			menuAdmin();
			int opcionAdmin = Integer.valueOf(scan.nextLine());
			while (opcionAdmin != 6) {
				if (opcionAdmin == 1) {
					verMatrizCompleta(experimento1, listaExp1, experimento2, listaExp2, experimento3, listaExp3, experimento4, listaExp4);
					
				} else if (opcionAdmin == 2) {
					////////
					
				} else if (opcionAdmin == 3) {
					////////////
					
				} else if (opcionAdmin == 4) {
					//////////////// 
					
				} else if (opcionAdmin == 5) {
					 ///////////////
					 
				}
				
				opcionAdmin = Integer.valueOf(scan.nextLine());
			}
		}
		
			
	} while (opcion != 3);	
	scan.close();

	
	}

}
